/*
 * Api Documentation
 * Api Documentation
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.MALArticle;
import io.swagger.client.model.MALEditor;
import io.swagger.client.model.MALEmbedded;
import io.swagger.client.model.MALPicture;
import io.swagger.client.model.MALTag;
import io.swagger.client.model.MALVideo;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * MALArticle
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2017-11-17T19:20:51.858+02:00")
public class MALArticle {
  @SerializedName("articleType")
  private String articleType = null;

  /**
   * Gets or Sets blockType
   */
  @JsonAdapter(BlockTypeEnum.Adapter.class)
  public enum BlockTypeEnum {
    BLOCKGROUP("BLOCKGROUP"),
    
    AD("AD"),
    
    AD_TABLET("AD_TABLET"),
    
    TAG("TAG"),
    
    MULTITAG("MULTITAG"),
    
    ARTICLE("ARTICLE"),
    
    VIDEO("VIDEO");

    private String value;

    BlockTypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static BlockTypeEnum fromValue(String text) {
      for (BlockTypeEnum b : BlockTypeEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<BlockTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final BlockTypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public BlockTypeEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return BlockTypeEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("blockType")
  private BlockTypeEnum blockType = null;

  @SerializedName("bodyText")
  private String bodyText = null;

  @SerializedName("category")
  private String category = null;

  @SerializedName("cellType")
  private String cellType = null;

  @SerializedName("date")
  private Long date = null;

  @SerializedName("departmentId")
  private Long departmentId = null;

  @SerializedName("departmentTitle")
  private String departmentTitle = null;

  @SerializedName("editorName")
  private String editorName = null;

  @SerializedName("editors")
  private List<MALEditor> editors = null;

  @SerializedName("elementPicture")
  private MALPicture elementPicture = null;

  @SerializedName("elementVignette")
  private String elementVignette = null;

  @SerializedName("embeddedContent")
  private List<MALEmbedded> embeddedContent = null;

  @SerializedName("externalUrl")
  private String externalUrl = null;

  @SerializedName("hardPaywall")
  private Boolean hardPaywall = null;

  @SerializedName("id")
  private String id = null;

  @SerializedName("largeRelated")
  private List<MALArticle> largeRelated = null;

  /**
   * Gets or Sets layoutModel
   */
  @JsonAdapter(LayoutModelEnum.Adapter.class)
  public enum LayoutModelEnum {
    TOTALHTML("TOTALHTML"),
    
    L("L"),
    
    XL("XL"),
    
    M("M"),
    
    COLUMN("COLUMN"),
    
    XL_TEXT("XL_TEXT"),
    
    XL_SEMIFULL("XL_SEMIFULL"),
    
    ADVERT("ADVERT");

    private String value;

    LayoutModelEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static LayoutModelEnum fromValue(String text) {
      for (LayoutModelEnum b : LayoutModelEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<LayoutModelEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final LayoutModelEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public LayoutModelEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return LayoutModelEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("layoutModel")
  private LayoutModelEnum layoutModel = null;

  @SerializedName("lead")
  private String lead = null;

  @SerializedName("mainGraphicType")
  private String mainGraphicType = null;

  @SerializedName("mainHeader")
  private String mainHeader = null;

  @SerializedName("mainPicture")
  private MALPicture mainPicture = null;

  @SerializedName("mainTag")
  private MALTag mainTag = null;

  @SerializedName("mobilePicture")
  private MALPicture mobilePicture = null;

  /**
   * Gets or Sets mobilePictureType
   */
  @JsonAdapter(MobilePictureTypeEnum.Adapter.class)
  public enum MobilePictureTypeEnum {
    PICTURE("PICTURE"),
    
    VIDEOTHUMBNAIL("VIDEOTHUMBNAIL");

    private String value;

    MobilePictureTypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static MobilePictureTypeEnum fromValue(String text) {
      for (MobilePictureTypeEnum b : MobilePictureTypeEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<MobilePictureTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final MobilePictureTypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public MobilePictureTypeEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return MobilePictureTypeEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("mobilePictureType")
  private MobilePictureTypeEnum mobilePictureType = null;

  @SerializedName("modified")
  private Boolean modified = null;

  @SerializedName("pictures")
  private List<MALPicture> pictures = null;

  @SerializedName("premiumArchived")
  private Boolean premiumArchived = null;

  @SerializedName("secondaryTags")
  private List<MALTag> secondaryTags = null;

  @SerializedName("shareToken")
  private String shareToken = null;

  @SerializedName("shareUrl")
  private String shareUrl = null;

  @SerializedName("smallRelated")
  private List<MALArticle> smallRelated = null;

  @SerializedName("startDate")
  private Long startDate = null;

  @SerializedName("style")
  private String style = null;

  @SerializedName("subHeader")
  private String subHeader = null;

  @SerializedName("url")
  private String url = null;

  @SerializedName("videos")
  private List<MALVideo> videos = null;

  public MALArticle articleType(String articleType) {
    this.articleType = articleType;
    return this;
  }

   /**
   * Get articleType
   * @return articleType
  **/
  @ApiModelProperty(required = true, value = "")
  public String getArticleType() {
    return articleType;
  }

  public void setArticleType(String articleType) {
    this.articleType = articleType;
  }

  public MALArticle blockType(BlockTypeEnum blockType) {
    this.blockType = blockType;
    return this;
  }

   /**
   * Get blockType
   * @return blockType
  **/
  @ApiModelProperty(required = true, value = "")
  public BlockTypeEnum getBlockType() {
    return blockType;
  }

  public void setBlockType(BlockTypeEnum blockType) {
    this.blockType = blockType;
  }

  public MALArticle bodyText(String bodyText) {
    this.bodyText = bodyText;
    return this;
  }

   /**
   * Get bodyText
   * @return bodyText
  **/
  @ApiModelProperty(required = true, value = "")
  public String getBodyText() {
    return bodyText;
  }

  public void setBodyText(String bodyText) {
    this.bodyText = bodyText;
  }

  public MALArticle category(String category) {
    this.category = category;
    return this;
  }

   /**
   * Get category
   * @return category
  **/
  @ApiModelProperty(required = true, value = "")
  public String getCategory() {
    return category;
  }

  public void setCategory(String category) {
    this.category = category;
  }

  public MALArticle cellType(String cellType) {
    this.cellType = cellType;
    return this;
  }

   /**
   * Get cellType
   * @return cellType
  **/
  @ApiModelProperty(required = true, value = "")
  public String getCellType() {
    return cellType;
  }

  public void setCellType(String cellType) {
    this.cellType = cellType;
  }

  public MALArticle date(Long date) {
    this.date = date;
    return this;
  }

   /**
   * Get date
   * @return date
  **/
  @ApiModelProperty(required = true, value = "")
  public Long getDate() {
    return date;
  }

  public void setDate(Long date) {
    this.date = date;
  }

  public MALArticle departmentId(Long departmentId) {
    this.departmentId = departmentId;
    return this;
  }

   /**
   * Get departmentId
   * @return departmentId
  **/
  @ApiModelProperty(value = "")
  public Long getDepartmentId() {
    return departmentId;
  }

  public void setDepartmentId(Long departmentId) {
    this.departmentId = departmentId;
  }

  public MALArticle departmentTitle(String departmentTitle) {
    this.departmentTitle = departmentTitle;
    return this;
  }

   /**
   * Get departmentTitle
   * @return departmentTitle
  **/
  @ApiModelProperty(required = true, value = "")
  public String getDepartmentTitle() {
    return departmentTitle;
  }

  public void setDepartmentTitle(String departmentTitle) {
    this.departmentTitle = departmentTitle;
  }

  public MALArticle editorName(String editorName) {
    this.editorName = editorName;
    return this;
  }

   /**
   * Get editorName
   * @return editorName
  **/
  @ApiModelProperty(required = true, value = "")
  public String getEditorName() {
    return editorName;
  }

  public void setEditorName(String editorName) {
    this.editorName = editorName;
  }

  public MALArticle editors(List<MALEditor> editors) {
    this.editors = editors;
    return this;
  }

  public MALArticle addEditorsItem(MALEditor editorsItem) {
    if (this.editors == null) {
      this.editors = new ArrayList<MALEditor>();
    }
    this.editors.add(editorsItem);
    return this;
  }

   /**
   * Get editors
   * @return editors
  **/
  @ApiModelProperty(value = "")
  public List<MALEditor> getEditors() {
    return editors;
  }

  public void setEditors(List<MALEditor> editors) {
    this.editors = editors;
  }

  public MALArticle elementPicture(MALPicture elementPicture) {
    this.elementPicture = elementPicture;
    return this;
  }

   /**
   * Get elementPicture
   * @return elementPicture
  **/
  @ApiModelProperty(required = true, value = "")
  public MALPicture getElementPicture() {
    return elementPicture;
  }

  public void setElementPicture(MALPicture elementPicture) {
    this.elementPicture = elementPicture;
  }

  public MALArticle elementVignette(String elementVignette) {
    this.elementVignette = elementVignette;
    return this;
  }

   /**
   * Get elementVignette
   * @return elementVignette
  **/
  @ApiModelProperty(required = true, value = "")
  public String getElementVignette() {
    return elementVignette;
  }

  public void setElementVignette(String elementVignette) {
    this.elementVignette = elementVignette;
  }

  public MALArticle embeddedContent(List<MALEmbedded> embeddedContent) {
    this.embeddedContent = embeddedContent;
    return this;
  }

  public MALArticle addEmbeddedContentItem(MALEmbedded embeddedContentItem) {
    if (this.embeddedContent == null) {
      this.embeddedContent = new ArrayList<MALEmbedded>();
    }
    this.embeddedContent.add(embeddedContentItem);
    return this;
  }

   /**
   * Get embeddedContent
   * @return embeddedContent
  **/
  @ApiModelProperty(value = "")
  public List<MALEmbedded> getEmbeddedContent() {
    return embeddedContent;
  }

  public void setEmbeddedContent(List<MALEmbedded> embeddedContent) {
    this.embeddedContent = embeddedContent;
  }

  public MALArticle externalUrl(String externalUrl) {
    this.externalUrl = externalUrl;
    return this;
  }

   /**
   * Get externalUrl
   * @return externalUrl
  **/
  @ApiModelProperty(required = true, value = "")
  public String getExternalUrl() {
    return externalUrl;
  }

  public void setExternalUrl(String externalUrl) {
    this.externalUrl = externalUrl;
  }

  public MALArticle hardPaywall(Boolean hardPaywall) {
    this.hardPaywall = hardPaywall;
    return this;
  }

   /**
   * Get hardPaywall
   * @return hardPaywall
  **/
  @ApiModelProperty(value = "")
  public Boolean getHardPaywall() {
    return hardPaywall;
  }

  public void setHardPaywall(Boolean hardPaywall) {
    this.hardPaywall = hardPaywall;
  }

  public MALArticle id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @ApiModelProperty(required = true, value = "")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public MALArticle largeRelated(List<MALArticle> largeRelated) {
    this.largeRelated = largeRelated;
    return this;
  }

  public MALArticle addLargeRelatedItem(MALArticle largeRelatedItem) {
    if (this.largeRelated == null) {
      this.largeRelated = new ArrayList<MALArticle>();
    }
    this.largeRelated.add(largeRelatedItem);
    return this;
  }

   /**
   * Get largeRelated
   * @return largeRelated
  **/
  @ApiModelProperty(value = "")
  public List<MALArticle> getLargeRelated() {
    return largeRelated;
  }

  public void setLargeRelated(List<MALArticle> largeRelated) {
    this.largeRelated = largeRelated;
  }

  public MALArticle layoutModel(LayoutModelEnum layoutModel) {
    this.layoutModel = layoutModel;
    return this;
  }

   /**
   * Get layoutModel
   * @return layoutModel
  **/
  @ApiModelProperty(required = true, value = "")
  public LayoutModelEnum getLayoutModel() {
    return layoutModel;
  }

  public void setLayoutModel(LayoutModelEnum layoutModel) {
    this.layoutModel = layoutModel;
  }

  public MALArticle lead(String lead) {
    this.lead = lead;
    return this;
  }

   /**
   * Get lead
   * @return lead
  **/
  @ApiModelProperty(required = true, value = "")
  public String getLead() {
    return lead;
  }

  public void setLead(String lead) {
    this.lead = lead;
  }

  public MALArticle mainGraphicType(String mainGraphicType) {
    this.mainGraphicType = mainGraphicType;
    return this;
  }

   /**
   * Get mainGraphicType
   * @return mainGraphicType
  **/
  @ApiModelProperty(required = true, value = "")
  public String getMainGraphicType() {
    return mainGraphicType;
  }

  public void setMainGraphicType(String mainGraphicType) {
    this.mainGraphicType = mainGraphicType;
  }

  public MALArticle mainHeader(String mainHeader) {
    this.mainHeader = mainHeader;
    return this;
  }

   /**
   * Get mainHeader
   * @return mainHeader
  **/
  @ApiModelProperty(required = true, value = "")
  public String getMainHeader() {
    return mainHeader;
  }

  public void setMainHeader(String mainHeader) {
    this.mainHeader = mainHeader;
  }

  public MALArticle mainPicture(MALPicture mainPicture) {
    this.mainPicture = mainPicture;
    return this;
  }

   /**
   * Get mainPicture
   * @return mainPicture
  **/
  @ApiModelProperty(required = true, value = "")
  public MALPicture getMainPicture() {
    return mainPicture;
  }

  public void setMainPicture(MALPicture mainPicture) {
    this.mainPicture = mainPicture;
  }

  public MALArticle mainTag(MALTag mainTag) {
    this.mainTag = mainTag;
    return this;
  }

   /**
   * Get mainTag
   * @return mainTag
  **/
  @ApiModelProperty(required = true, value = "")
  public MALTag getMainTag() {
    return mainTag;
  }

  public void setMainTag(MALTag mainTag) {
    this.mainTag = mainTag;
  }

  public MALArticle mobilePicture(MALPicture mobilePicture) {
    this.mobilePicture = mobilePicture;
    return this;
  }

   /**
   * Get mobilePicture
   * @return mobilePicture
  **/
  @ApiModelProperty(required = true, value = "")
  public MALPicture getMobilePicture() {
    return mobilePicture;
  }

  public void setMobilePicture(MALPicture mobilePicture) {
    this.mobilePicture = mobilePicture;
  }

  public MALArticle mobilePictureType(MobilePictureTypeEnum mobilePictureType) {
    this.mobilePictureType = mobilePictureType;
    return this;
  }

   /**
   * Get mobilePictureType
   * @return mobilePictureType
  **/
  @ApiModelProperty(required = true, value = "")
  public MobilePictureTypeEnum getMobilePictureType() {
    return mobilePictureType;
  }

  public void setMobilePictureType(MobilePictureTypeEnum mobilePictureType) {
    this.mobilePictureType = mobilePictureType;
  }

  public MALArticle modified(Boolean modified) {
    this.modified = modified;
    return this;
  }

   /**
   * Get modified
   * @return modified
  **/
  @ApiModelProperty(value = "")
  public Boolean getModified() {
    return modified;
  }

  public void setModified(Boolean modified) {
    this.modified = modified;
  }

  public MALArticle pictures(List<MALPicture> pictures) {
    this.pictures = pictures;
    return this;
  }

  public MALArticle addPicturesItem(MALPicture picturesItem) {
    if (this.pictures == null) {
      this.pictures = new ArrayList<MALPicture>();
    }
    this.pictures.add(picturesItem);
    return this;
  }

   /**
   * Get pictures
   * @return pictures
  **/
  @ApiModelProperty(value = "")
  public List<MALPicture> getPictures() {
    return pictures;
  }

  public void setPictures(List<MALPicture> pictures) {
    this.pictures = pictures;
  }

  public MALArticle premiumArchived(Boolean premiumArchived) {
    this.premiumArchived = premiumArchived;
    return this;
  }

   /**
   * Get premiumArchived
   * @return premiumArchived
  **/
  @ApiModelProperty(value = "")
  public Boolean getPremiumArchived() {
    return premiumArchived;
  }

  public void setPremiumArchived(Boolean premiumArchived) {
    this.premiumArchived = premiumArchived;
  }

  public MALArticle secondaryTags(List<MALTag> secondaryTags) {
    this.secondaryTags = secondaryTags;
    return this;
  }

  public MALArticle addSecondaryTagsItem(MALTag secondaryTagsItem) {
    if (this.secondaryTags == null) {
      this.secondaryTags = new ArrayList<MALTag>();
    }
    this.secondaryTags.add(secondaryTagsItem);
    return this;
  }

   /**
   * Get secondaryTags
   * @return secondaryTags
  **/
  @ApiModelProperty(value = "")
  public List<MALTag> getSecondaryTags() {
    return secondaryTags;
  }

  public void setSecondaryTags(List<MALTag> secondaryTags) {
    this.secondaryTags = secondaryTags;
  }

  public MALArticle shareToken(String shareToken) {
    this.shareToken = shareToken;
    return this;
  }

   /**
   * Get shareToken
   * @return shareToken
  **/
  @ApiModelProperty(required = true, value = "")
  public String getShareToken() {
    return shareToken;
  }

  public void setShareToken(String shareToken) {
    this.shareToken = shareToken;
  }

  public MALArticle shareUrl(String shareUrl) {
    this.shareUrl = shareUrl;
    return this;
  }

   /**
   * Get shareUrl
   * @return shareUrl
  **/
  @ApiModelProperty(required = true, value = "")
  public String getShareUrl() {
    return shareUrl;
  }

  public void setShareUrl(String shareUrl) {
    this.shareUrl = shareUrl;
  }

  public MALArticle smallRelated(List<MALArticle> smallRelated) {
    this.smallRelated = smallRelated;
    return this;
  }

  public MALArticle addSmallRelatedItem(MALArticle smallRelatedItem) {
    if (this.smallRelated == null) {
      this.smallRelated = new ArrayList<MALArticle>();
    }
    this.smallRelated.add(smallRelatedItem);
    return this;
  }

   /**
   * Get smallRelated
   * @return smallRelated
  **/
  @ApiModelProperty(value = "")
  public List<MALArticle> getSmallRelated() {
    return smallRelated;
  }

  public void setSmallRelated(List<MALArticle> smallRelated) {
    this.smallRelated = smallRelated;
  }

  public MALArticle startDate(Long startDate) {
    this.startDate = startDate;
    return this;
  }

   /**
   * Get startDate
   * @return startDate
  **/
  @ApiModelProperty(required = true, value = "")
  public Long getStartDate() {
    return startDate;
  }

  public void setStartDate(Long startDate) {
    this.startDate = startDate;
  }

  public MALArticle style(String style) {
    this.style = style;
    return this;
  }

   /**
   * Get style
   * @return style
  **/
  @ApiModelProperty(required = true, value = "")
  public String getStyle() {
    return style;
  }

  public void setStyle(String style) {
    this.style = style;
  }

  public MALArticle subHeader(String subHeader) {
    this.subHeader = subHeader;
    return this;
  }

   /**
   * Get subHeader
   * @return subHeader
  **/
  @ApiModelProperty(required = true, value = "")
  public String getSubHeader() {
    return subHeader;
  }

  public void setSubHeader(String subHeader) {
    this.subHeader = subHeader;
  }

  public MALArticle url(String url) {
    this.url = url;
    return this;
  }

   /**
   * Get url
   * @return url
  **/
  @ApiModelProperty(required = true, value = "")
  public String getUrl() {
    return url;
  }

  public void setUrl(String url) {
    this.url = url;
  }

  public MALArticle videos(List<MALVideo> videos) {
    this.videos = videos;
    return this;
  }

  public MALArticle addVideosItem(MALVideo videosItem) {
    if (this.videos == null) {
      this.videos = new ArrayList<MALVideo>();
    }
    this.videos.add(videosItem);
    return this;
  }

   /**
   * Get videos
   * @return videos
  **/
  @ApiModelProperty(value = "")
  public List<MALVideo> getVideos() {
    return videos;
  }

  public void setVideos(List<MALVideo> videos) {
    this.videos = videos;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    MALArticle maLArticle = (MALArticle) o;
    return Objects.equals(this.articleType, maLArticle.articleType) &&
        Objects.equals(this.blockType, maLArticle.blockType) &&
        Objects.equals(this.bodyText, maLArticle.bodyText) &&
        Objects.equals(this.category, maLArticle.category) &&
        Objects.equals(this.cellType, maLArticle.cellType) &&
        Objects.equals(this.date, maLArticle.date) &&
        Objects.equals(this.departmentId, maLArticle.departmentId) &&
        Objects.equals(this.departmentTitle, maLArticle.departmentTitle) &&
        Objects.equals(this.editorName, maLArticle.editorName) &&
        Objects.equals(this.editors, maLArticle.editors) &&
        Objects.equals(this.elementPicture, maLArticle.elementPicture) &&
        Objects.equals(this.elementVignette, maLArticle.elementVignette) &&
        Objects.equals(this.embeddedContent, maLArticle.embeddedContent) &&
        Objects.equals(this.externalUrl, maLArticle.externalUrl) &&
        Objects.equals(this.hardPaywall, maLArticle.hardPaywall) &&
        Objects.equals(this.id, maLArticle.id) &&
        Objects.equals(this.largeRelated, maLArticle.largeRelated) &&
        Objects.equals(this.layoutModel, maLArticle.layoutModel) &&
        Objects.equals(this.lead, maLArticle.lead) &&
        Objects.equals(this.mainGraphicType, maLArticle.mainGraphicType) &&
        Objects.equals(this.mainHeader, maLArticle.mainHeader) &&
        Objects.equals(this.mainPicture, maLArticle.mainPicture) &&
        Objects.equals(this.mainTag, maLArticle.mainTag) &&
        Objects.equals(this.mobilePicture, maLArticle.mobilePicture) &&
        Objects.equals(this.mobilePictureType, maLArticle.mobilePictureType) &&
        Objects.equals(this.modified, maLArticle.modified) &&
        Objects.equals(this.pictures, maLArticle.pictures) &&
        Objects.equals(this.premiumArchived, maLArticle.premiumArchived) &&
        Objects.equals(this.secondaryTags, maLArticle.secondaryTags) &&
        Objects.equals(this.shareToken, maLArticle.shareToken) &&
        Objects.equals(this.shareUrl, maLArticle.shareUrl) &&
        Objects.equals(this.smallRelated, maLArticle.smallRelated) &&
        Objects.equals(this.startDate, maLArticle.startDate) &&
        Objects.equals(this.style, maLArticle.style) &&
        Objects.equals(this.subHeader, maLArticle.subHeader) &&
        Objects.equals(this.url, maLArticle.url) &&
        Objects.equals(this.videos, maLArticle.videos);
  }

  @Override
  public int hashCode() {
    return Objects.hash(articleType, blockType, bodyText, category, cellType, date, departmentId, departmentTitle, editorName, editors, elementPicture, elementVignette, embeddedContent, externalUrl, hardPaywall, id, largeRelated, layoutModel, lead, mainGraphicType, mainHeader, mainPicture, mainTag, mobilePicture, mobilePictureType, modified, pictures, premiumArchived, secondaryTags, shareToken, shareUrl, smallRelated, startDate, style, subHeader, url, videos);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class MALArticle {\n");
    
    sb.append("    articleType: ").append(toIndentedString(articleType)).append("\n");
    sb.append("    blockType: ").append(toIndentedString(blockType)).append("\n");
    sb.append("    bodyText: ").append(toIndentedString(bodyText)).append("\n");
    sb.append("    category: ").append(toIndentedString(category)).append("\n");
    sb.append("    cellType: ").append(toIndentedString(cellType)).append("\n");
    sb.append("    date: ").append(toIndentedString(date)).append("\n");
    sb.append("    departmentId: ").append(toIndentedString(departmentId)).append("\n");
    sb.append("    departmentTitle: ").append(toIndentedString(departmentTitle)).append("\n");
    sb.append("    editorName: ").append(toIndentedString(editorName)).append("\n");
    sb.append("    editors: ").append(toIndentedString(editors)).append("\n");
    sb.append("    elementPicture: ").append(toIndentedString(elementPicture)).append("\n");
    sb.append("    elementVignette: ").append(toIndentedString(elementVignette)).append("\n");
    sb.append("    embeddedContent: ").append(toIndentedString(embeddedContent)).append("\n");
    sb.append("    externalUrl: ").append(toIndentedString(externalUrl)).append("\n");
    sb.append("    hardPaywall: ").append(toIndentedString(hardPaywall)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    largeRelated: ").append(toIndentedString(largeRelated)).append("\n");
    sb.append("    layoutModel: ").append(toIndentedString(layoutModel)).append("\n");
    sb.append("    lead: ").append(toIndentedString(lead)).append("\n");
    sb.append("    mainGraphicType: ").append(toIndentedString(mainGraphicType)).append("\n");
    sb.append("    mainHeader: ").append(toIndentedString(mainHeader)).append("\n");
    sb.append("    mainPicture: ").append(toIndentedString(mainPicture)).append("\n");
    sb.append("    mainTag: ").append(toIndentedString(mainTag)).append("\n");
    sb.append("    mobilePicture: ").append(toIndentedString(mobilePicture)).append("\n");
    sb.append("    mobilePictureType: ").append(toIndentedString(mobilePictureType)).append("\n");
    sb.append("    modified: ").append(toIndentedString(modified)).append("\n");
    sb.append("    pictures: ").append(toIndentedString(pictures)).append("\n");
    sb.append("    premiumArchived: ").append(toIndentedString(premiumArchived)).append("\n");
    sb.append("    secondaryTags: ").append(toIndentedString(secondaryTags)).append("\n");
    sb.append("    shareToken: ").append(toIndentedString(shareToken)).append("\n");
    sb.append("    shareUrl: ").append(toIndentedString(shareUrl)).append("\n");
    sb.append("    smallRelated: ").append(toIndentedString(smallRelated)).append("\n");
    sb.append("    startDate: ").append(toIndentedString(startDate)).append("\n");
    sb.append("    style: ").append(toIndentedString(style)).append("\n");
    sb.append("    subHeader: ").append(toIndentedString(subHeader)).append("\n");
    sb.append("    url: ").append(toIndentedString(url)).append("\n");
    sb.append("    videos: ").append(toIndentedString(videos)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}

