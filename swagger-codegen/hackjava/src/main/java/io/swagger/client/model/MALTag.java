/*
 * Api Documentation
 * Api Documentation
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * MALTag
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2017-11-17T19:20:51.858+02:00")
public class MALTag {
  /**
   * Gets or Sets blockType
   */
  @JsonAdapter(BlockTypeEnum.Adapter.class)
  public enum BlockTypeEnum {
    BLOCKGROUP("BLOCKGROUP"),
    
    AD("AD"),
    
    AD_TABLET("AD_TABLET"),
    
    TAG("TAG"),
    
    MULTITAG("MULTITAG"),
    
    ARTICLE("ARTICLE"),
    
    VIDEO("VIDEO");

    private String value;

    BlockTypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static BlockTypeEnum fromValue(String text) {
      for (BlockTypeEnum b : BlockTypeEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<BlockTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final BlockTypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public BlockTypeEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return BlockTypeEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("blockType")
  private BlockTypeEnum blockType = null;

  @SerializedName("feedUrl")
  private String feedUrl = null;

  @SerializedName("id")
  private String id = null;

  @SerializedName("title")
  private String title = null;

  public MALTag blockType(BlockTypeEnum blockType) {
    this.blockType = blockType;
    return this;
  }

   /**
   * Get blockType
   * @return blockType
  **/
  @ApiModelProperty(required = true, value = "")
  public BlockTypeEnum getBlockType() {
    return blockType;
  }

  public void setBlockType(BlockTypeEnum blockType) {
    this.blockType = blockType;
  }

  public MALTag feedUrl(String feedUrl) {
    this.feedUrl = feedUrl;
    return this;
  }

   /**
   * Get feedUrl
   * @return feedUrl
  **/
  @ApiModelProperty(required = true, value = "")
  public String getFeedUrl() {
    return feedUrl;
  }

  public void setFeedUrl(String feedUrl) {
    this.feedUrl = feedUrl;
  }

  public MALTag id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @ApiModelProperty(required = true, value = "")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public MALTag title(String title) {
    this.title = title;
    return this;
  }

   /**
   * Get title
   * @return title
  **/
  @ApiModelProperty(required = true, value = "")
  public String getTitle() {
    return title;
  }

  public void setTitle(String title) {
    this.title = title;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    MALTag maLTag = (MALTag) o;
    return Objects.equals(this.blockType, maLTag.blockType) &&
        Objects.equals(this.feedUrl, maLTag.feedUrl) &&
        Objects.equals(this.id, maLTag.id) &&
        Objects.equals(this.title, maLTag.title);
  }

  @Override
  public int hashCode() {
    return Objects.hash(blockType, feedUrl, id, title);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class MALTag {\n");
    
    sb.append("    blockType: ").append(toIndentedString(blockType)).append("\n");
    sb.append("    feedUrl: ").append(toIndentedString(feedUrl)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    title: ").append(toIndentedString(title)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}

